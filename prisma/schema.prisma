// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Compte {
  id           String        @id @default(uuid())
  email        String        @unique
  motdepasse   String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Proprietaire Proprietaire?
  Passager     Passager?
}

model Proprietaire {
  id          String @id @default(uuid())
  nomComplete String
  Gsm         String
  fixe        String
  adresse     String

  compte   Compte @relation(fields: [idCompte], references: [id])
  idCompte String @unique

  moyenneDeTransport   MoyenneDeTransport @relation(fields: [idMoyenneDeTransport], references: [id])
  idMoyenneDeTransport String

  Voyages Voyage[]
}

model Passager {
  id          String @id @default(uuid())
  nomComplete String
  fixe        String
  adresse     String

  compte   Compte @relation(fields: [idCompte], references: [id])
  idCompte String @unique

  Voyages Voyage[]
}

model MoyenneDeTransport {
  id             String  @id @default(uuid())
  nom            String
  isCalculable   Boolean @default(false)
  cout_par_metre Float
  description    String

  Voyages       Voyage[]
  Proprietaires Proprietaire[]
}

model Place {
  id                  String   @id @default(uuid())
  nom                 String
  latitude            Float
  longtitude          Float
  description         String
  voyage_placeDepart  Voyage[] @relation("placeDepart")
  voyage_placeArrivee Voyage[] @relation("placeArrivee")
}

model Voyage {
  id                   String             @id @default(uuid())
  dateVoyage           DateTime
  statut               String
  proprietaire         Proprietaire       @relation(fields: [idProprietaire], references: [id])
  idProprietaire       String
  moyenneDeTransport   MoyenneDeTransport @relation(fields: [idMoyenneDeTransport], references: [id])
  idMoyenneDeTransport String
  passager             Passager           @relation(fields: [idPassager], references: [id])
  idPassager           String

  placeDepart  Place  @relation("placeDepart", fields: [idPaceDepart], references: [id])
  idPaceDepart String

  placeArrivee  Place  @relation("placeArrivee", fields: [idPaceArrivee], references: [id])
  idPaceArrivee String
}
